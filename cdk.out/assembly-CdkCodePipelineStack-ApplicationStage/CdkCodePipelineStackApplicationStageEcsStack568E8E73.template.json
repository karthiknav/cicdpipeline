{
 "Resources": {
  "cicdClusterC9A4FE83": {
   "Type": "AWS::ECS::Cluster",
   "Properties": {
    "ClusterName": "cicddemoCluster"
   },
   "Metadata": {
    "aws:cdk:path": "CdkCodePipelineStack/ApplicationStage/EcsStack/cicdCluster/Resource"
   }
  },
  "EcsTaskExecutionRoleC0B6A84D": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CdkCodePipelineStack/ApplicationStage/EcsStack/EcsTaskExecutionRole/Resource"
   }
  },
  "EcsTaskExecutionRoleDefaultPolicyDCEEFDC3": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "cicdLogGroupC418AA0C",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "EcsTaskExecutionRoleDefaultPolicyDCEEFDC3",
    "Roles": [
     {
      "Ref": "EcsTaskExecutionRoleC0B6A84D"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CdkCodePipelineStack/ApplicationStage/EcsStack/EcsTaskExecutionRole/DefaultPolicy/Resource"
   }
  },
  "cicdLogGroupC418AA0C": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": "/ecs/cicddemoLogGroup",
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CdkCodePipelineStack/ApplicationStage/EcsStack/cicdLogGroup/Resource"
   }
  },
  "cicdTaskDefinitionTaskRoleD37D3747": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkCodePipelineStack/ApplicationStage/EcsStack/cicdTaskDefinition/TaskRole/Resource"
   }
  },
  "cicdTaskDefinitionF97375F4": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Essential": true,
      "Image": "206409480438.dkr.ecr.us-east-1.amazonaws.com/cicdpipeline:latest",
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "cicdLogGroupC418AA0C"
        },
        "awslogs-stream-prefix": "ecs",
        "awslogs-region": "us-east-1"
       }
      },
      "Memory": 512,
      "Name": "cicdcontainer",
      "PortMappings": [
       {
        "ContainerPort": 8080,
        "Protocol": "tcp"
       }
      ]
     }
    ],
    "Cpu": "512",
    "ExecutionRoleArn": {
     "Fn::GetAtt": [
      "EcsTaskExecutionRoleC0B6A84D",
      "Arn"
     ]
    },
    "Family": "cicdTaskDefinition",
    "Memory": "1024",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "cicdTaskDefinitionTaskRoleD37D3747",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkCodePipelineStack/ApplicationStage/EcsStack/cicdTaskDefinition/Resource"
   }
  },
  "cicdRepositoryF140DEA9": {
   "Type": "AWS::ECR::Repository",
   "Properties": {
    "RepositoryName": "cicdrepository"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CdkCodePipelineStack/ApplicationStage/EcsStack/cicdRepository/Resource"
   }
  },
  "albSecurityGroup624E032B": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "CdkCodePipelineStack/ApplicationStage/EcsStack/albSecurityGroup",
    "GroupName": "cicddemoAlbSecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow HTTP traffic from anywhere",
      "FromPort": 80,
      "IpProtocol": "tcp",
      "ToPort": 80
     }
    ],
    "VpcId": {
     "Fn::ImportValue": "ApplicationStage-CdkVpcStack:ExportsOutputRefmyVPC0151299038646803"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkCodePipelineStack/ApplicationStage/EcsStack/albSecurityGroup/Resource"
   }
  },
  "cicdALB1BF97252": {
   "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
   "Properties": {
    "LoadBalancerAttributes": [
     {
      "Key": "deletion_protection.enabled",
      "Value": "false"
     }
    ],
    "Name": "cicddemoAlb",
    "Scheme": "internet-facing",
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "albSecurityGroup624E032B",
       "GroupId"
      ]
     }
    ],
    "Subnets": [
     {
      "Fn::ImportValue": "ApplicationStage-CdkVpcStack:ExportsOutputRefmyVPCPublicSubnetSubnet1Subnet16DC04510512DA9B"
     },
     {
      "Fn::ImportValue": "ApplicationStage-CdkVpcStack:ExportsOutputRefmyVPCPublicSubnetSubnet2Subnet26518C29D679167B"
     }
    ],
    "Type": "application"
   },
   "Metadata": {
    "aws:cdk:path": "CdkCodePipelineStack/ApplicationStage/EcsStack/cicdALB/Resource"
   }
  },
  "cicdALBcicdListenerC83D6466": {
   "Type": "AWS::ElasticLoadBalancingV2::Listener",
   "Properties": {
    "DefaultActions": [
     {
      "TargetGroupArn": {
       "Ref": "cicdALBcicdListenercicddemoTargetGroupGroup048C3A6D"
      },
      "Type": "forward"
     }
    ],
    "LoadBalancerArn": {
     "Ref": "cicdALB1BF97252"
    },
    "Port": 80,
    "Protocol": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "CdkCodePipelineStack/ApplicationStage/EcsStack/cicdALB/cicdListener/Resource"
   }
  },
  "cicdALBcicdListenercicddemoTargetGroupGroup048C3A6D": {
   "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
   "Properties": {
    "HealthCheckPath": "/actuator/health",
    "Port": 8080,
    "Protocol": "HTTP",
    "TargetGroupAttributes": [
     {
      "Key": "stickiness.enabled",
      "Value": "false"
     }
    ],
    "TargetType": "ip",
    "VpcId": {
     "Fn::ImportValue": "ApplicationStage-CdkVpcStack:ExportsOutputRefmyVPC0151299038646803"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkCodePipelineStack/ApplicationStage/EcsStack/cicdALB/cicdListener/cicddemoTargetGroupGroup/Resource"
   }
  },
  "ecsSecurityGroupA27532EA": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "CdkCodePipelineStack/ApplicationStage/EcsStack/ecsSecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Fn::ImportValue": "ApplicationStage-CdkVpcStack:ExportsOutputRefmyVPC0151299038646803"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkCodePipelineStack/ApplicationStage/EcsStack/ecsSecurityGroup/Resource"
   }
  },
  "ecsSecurityGroupfromCdkCodePipelineStackApplicationStageEcsStackalbSecurityGroup941CDD1B80804A0C6C34": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "Allow HTTP traffic from ALB",
    "FromPort": 8080,
    "GroupId": {
     "Fn::GetAtt": [
      "ecsSecurityGroupA27532EA",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "albSecurityGroup624E032B",
      "GroupId"
     ]
    },
    "ToPort": 8080
   },
   "Metadata": {
    "aws:cdk:path": "CdkCodePipelineStack/ApplicationStage/EcsStack/ecsSecurityGroup/from CdkCodePipelineStackApplicationStageEcsStackalbSecurityGroup941CDD1B:8080"
   }
  },
  "cicdService1630270E": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "Cluster": {
     "Ref": "cicdClusterC9A4FE83"
    },
    "DeploymentConfiguration": {
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 50
    },
    "DesiredCount": 1,
    "EnableECSManagedTags": false,
    "HealthCheckGracePeriodSeconds": 60,
    "LaunchType": "FARGATE",
    "LoadBalancers": [
     {
      "ContainerName": "cicdcontainer",
      "ContainerPort": 8080,
      "TargetGroupArn": {
       "Ref": "cicdALBcicdListenercicddemoTargetGroupGroup048C3A6D"
      }
     }
    ],
    "NetworkConfiguration": {
     "AwsvpcConfiguration": {
      "AssignPublicIp": "ENABLED",
      "SecurityGroups": [
       {
        "Fn::GetAtt": [
         "ecsSecurityGroupA27532EA",
         "GroupId"
        ]
       }
      ],
      "Subnets": [
       {
        "Fn::ImportValue": "ApplicationStage-CdkVpcStack:ExportsOutputRefmyVPCPrivateSubnetSubnet1Subnet73687137F7FEF86A"
       },
       {
        "Fn::ImportValue": "ApplicationStage-CdkVpcStack:ExportsOutputRefmyVPCPrivateSubnetSubnet2Subnet205EC7B7F1880CEF"
       }
      ]
     }
    },
    "ServiceName": "cicddemoService",
    "TaskDefinition": {
     "Ref": "cicdTaskDefinitionF97375F4"
    }
   },
   "DependsOn": [
    "cicdALBcicdListenercicddemoTargetGroupGroup048C3A6D",
    "cicdALBcicdListenerC83D6466",
    "cicdTaskDefinitionTaskRoleD37D3747"
   ],
   "Metadata": {
    "aws:cdk:path": "CdkCodePipelineStack/ApplicationStage/EcsStack/cicdService/Service"
   }
  },
  "cicdServiceTaskCountTargetA11A5562": {
   "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
   "Properties": {
    "MaxCapacity": 4,
    "MinCapacity": 2,
    "ResourceId": {
     "Fn::Join": [
      "",
      [
       "service/",
       {
        "Ref": "cicdClusterC9A4FE83"
       },
       "/",
       {
        "Fn::GetAtt": [
         "cicdService1630270E",
         "Name"
        ]
       }
      ]
     ]
    },
    "RoleARN": "arn:aws:iam::206409480438:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService",
    "ScalableDimension": "ecs:service:DesiredCount",
    "ServiceNamespace": "ecs"
   },
   "DependsOn": [
    "cicdTaskDefinitionTaskRoleD37D3747"
   ],
   "Metadata": {
    "aws:cdk:path": "CdkCodePipelineStack/ApplicationStage/EcsStack/cicdService/TaskCount/Target/Resource"
   }
  },
  "cicdServiceTaskCountTargetCpuScaling67D29028": {
   "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
   "Properties": {
    "PolicyName": "cicddemoScalingPolicy",
    "PolicyType": "TargetTrackingScaling",
    "ScalingTargetId": {
     "Ref": "cicdServiceTaskCountTargetA11A5562"
    },
    "TargetTrackingScalingPolicyConfiguration": {
     "PredefinedMetricSpecification": {
      "PredefinedMetricType": "ECSServiceAverageCPUUtilization"
     },
     "ScaleInCooldown": 60,
     "ScaleOutCooldown": 60,
     "TargetValue": 50
    }
   },
   "DependsOn": [
    "cicdTaskDefinitionTaskRoleD37D3747"
   ],
   "Metadata": {
    "aws:cdk:path": "CdkCodePipelineStack/ApplicationStage/EcsStack/cicdService/TaskCount/Target/CpuScaling/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/61US28TMRD+LfURuUvTCyi3NAUUVKBKIi6rqprY08XEay+2NyGy9r8jv5KNWkBCHKJ4Z7755j3X1eTtpJpcwN5eMr69lGJT+ZUDtqWwt48ema38XPbWoak9Yen1GVokU/KKULLrWHwND3T+pDKSvgfTgMM12O0tPgklnNCqjgbnv2h1DqNzrRwIhWYky4QrNDvBsC6W+ZuuGEjYyOhwrnvlBiqgrfxSS6w9AWv7FvnNgUw96YxQTHQgZ4wFaE4kYYLBjAWXKStKWlDQIL/XUjCBlkyj84F6Apyv9X1hi4ADmdZ+SFrngH1bKCkUHnVH0z8q/zna1IQgpYk1lry4W+ugeRbFczHnKwcOW1TO5oQiceIcqNSNrfydbj4Y3Xe1JzI/R3NhsNW7U1UIR+uMPuQ5KbYDRWYqv8ROW+G0OdT+t5aBs8COjnLGR0UgvK78CllvhDuUAMuUUgJS6v1Myi+92+hecTJ1pkdK7NjiRJ/KsVCNQWuXfayTJwxU6l2SJAamlcLYDJt99Ur86HHBC9VARyX+n5z0CaTFwvxuTBwHIIECZcT8rRovRngiejmDkaMcTd7QUV2fCTLFQFGCdYJJDXwDEhQTqtldV37WdVIwCBW408Bvog5NPT4fYwUdGwjrUJ3AZzenKMcGazANumOko8+BwgkGvdOWgRSqqfzp8gRw7YlNJymMkO2AhTlCZgklNiNvRYvKlp0NU211b1jpKSUmrmN8tkLNoQMm3KFI4OeZJPQiMONarw2w7Sd0RrDSD9IZ5OGKIi+KyNLF5RqtKxc2xBaywUWJzMWcvoLsC8wm/VxryfU+X53S6bNK0PQXYxKqWaV6paUu6KNgGOgyV2HcrIeBfoQdvJ68qa6qydXFdyvEpemVEy1Wy/T/C7WnRC3BBgAA"
   },
   "Metadata": {
    "aws:cdk:path": "CdkCodePipelineStack/ApplicationStage/EcsStack/CDKMetadata/Default"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}